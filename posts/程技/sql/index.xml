<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL on 樊刹</title>
    <link>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/</link>
    <description>Recent content in SQL on 樊刹</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 19 Sep 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL常用函数</title>
      <link>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/mysql%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</link>
      <pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/mysql%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</guid>
      <description>1、数学函数 ABS(x) --返回x的绝对值 BIN(x) --返回x的二进制（OCT返回八进制，HEX返回十六进制） CEILING(x) --返回大于x的最小整数值 EXP(x) --返回值e（自然对数的底）的x次方 FLOOR(x)</description>
    </item>
    <item>
      <title>live_max_online</title>
      <link>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/live_max_online/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/live_max_online/</guid>
      <description>-- step0 建表 -- drop table cm.tb_live_logs; create table cm.tb_live_logs ( live_id int, user_id int, ts datetime, type varchar(10) ); -- step1 插入数据 insert into cm.tb_live_logs (live_id, user_id, ts, type) values (901,1001,&amp;#39;2022-10-01 12:00:00&amp;#39;,&amp;#39;IN&amp;#39;), (901,1002,&amp;#39;2022-10-01 12:01:00&amp;#39;,&amp;#39;IN&amp;#39;), (901,1003,&amp;#39;2022-10-01 12:01:00&amp;#39;,&amp;#39;IN&amp;#39;), (901,1004,&amp;#39;2022-10-01 12:02:00&amp;#39;,&amp;#39;IN&amp;#39;), (901,1005,&amp;#39;2022-10-01 12:02:00&amp;#39;,&amp;#39;IN&amp;#39;), (901,1006,&amp;#39;2022-10-01 12:03:00&amp;#39;,&amp;#39;IN&amp;#39;), (901,1007,&amp;#39;2022-10-01 12:03:00&amp;#39;,&amp;#39;IN&amp;#39;), (901,1008,&amp;#39;2022-10-01 12:05:00&amp;#39;,&amp;#39;IN&amp;#39;), (901,1009,&amp;#39;2022-10-01 12:05:00&amp;#39;,&amp;#39;IN&amp;#39;), (901,1010,&amp;#39;2022-10-01 12:06:03&amp;#39;,&amp;#39;IN&amp;#39;), (902,1101,&amp;#39;2022-10-01 12:00:00&amp;#39;,&amp;#39;IN&amp;#39;), (902,1102,&amp;#39;2022-10-01 12:01:00&amp;#39;,&amp;#39;IN&amp;#39;), (902,1103,&amp;#39;2022-10-01 12:01:00&amp;#39;,&amp;#39;IN&amp;#39;), (902,1104,&amp;#39;2022-10-01 12:02:00&amp;#39;,&amp;#39;IN&amp;#39;), (902,1105,&amp;#39;2022-10-01 12:29:00&amp;#39;,&amp;#39;IN&amp;#39;), (902,1106,&amp;#39;2022-10-01 12:30:00&amp;#39;,&amp;#39;IN&amp;#39;), (902,1107,&amp;#39;2022-10-01 12:31:00&amp;#39;,&amp;#39;IN&amp;#39;), (902,1108,&amp;#39;2022-10-01 12:32:00&amp;#39;,&amp;#39;IN&amp;#39;), (902,1109,&amp;#39;2022-10-01 12:39:00&amp;#39;,&amp;#39;IN&amp;#39;), (902,1110,&amp;#39;2022-10-01 12:06:03&amp;#39;,&amp;#39;IN&amp;#39;), (901,1001,&amp;#39;2022-10-01 12:03:03&amp;#39;,&amp;#39;OUT&amp;#39;), (901,1002,&amp;#39;2022-10-01 12:01:00&amp;#39;,&amp;#39;OUT&amp;#39;), (901,1003,&amp;#39;2022-10-01</description>
    </item>
    <item>
      <title>MySQL常用30种SQL查询语句优化方法</title>
      <link>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/mysql-commonly-uses-30-sql-query-statement-optimization-methods/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/mysql-commonly-uses-30-sql-query-statement-optimization-methods/</guid>
      <description>引言 在开发和维护MySQL数据库时，优化SQL查询语句是提高数据库性能和响应速度的关键。通过合理优化SQL查询，可以减少数据库的负载，提高查询效率，为用户提供更</description>
    </item>
    <item>
      <title>SQL每日一题(20230814)</title>
      <link>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/sql-daily-question-20230814/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/sql-daily-question-20230814/</guid>
      <description>SQL每日一题(20230814) 题目 有如下两张表G0227A（客户表） Id Name 1 曹操 2 关于 3 刘备 4 张飞 G0227B（订单表） Id CustomerId 1 3 2 1 查询G0227B表（订单表</description>
    </item>
    <item>
      <title>SQL每日一题F0215，多种方法及思路讲解</title>
      <link>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/sql-daily-question-f0215-a-variety-of-methods-and-ideas-explained/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/sql-daily-question-f0215-a-variety-of-methods-and-ideas-explained/</guid>
      <description>SQL每日一题F0215，多种方法及思路讲解 CREATE TABLE F0215 ( StuID INT, CID VARCHAR(10), Course INT ) INSERT INTO F0215 VALUES (1,&amp;#39;001&amp;#39;,67), (1,&amp;#39;002&amp;#39;,89), (1,&amp;#39;003&amp;#39;,94), (2,&amp;#39;001&amp;#39;,95), (2,&amp;#39;002&amp;#39;,88), (2,&amp;#39;004&amp;#39;,78), (3,&amp;#39;001&amp;#39;,94), (3,&amp;#39;002&amp;#39;,77), (3,&amp;#39;003&amp;#39;,90) select * from f0215 /* 查询出既学过&amp;#39;001&amp;#39;课程，也学过&amp;#39</description>
    </item>
    <item>
      <title>SQL每日一题F1021，while循环操作</title>
      <link>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/sql-daily-question-f1021-while-loop-operation/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/sql-daily-question-f1021-while-loop-operation/</guid>
      <description>SQL每日一题F1021，while循环操作 /* 写一个查询语句要求 求出整数1到100之间排除55后的和 预计结果是4995 该如何写这个查询？ 要求：使用while循环</description>
    </item>
    <item>
      <title>SQL每日一题F1025，复杂逻辑处理</title>
      <link>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/sql-daily-question-f1025-complex-logic-processing/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/sql-daily-question-f1025-complex-logic-processing/</guid>
      <description>SQL每日一题F1025，复杂逻辑处理 create table F1025 ( id int, num int ) insert into F1025 values(1,5); insert into F1025 values(2,11); insert into F1025 values(3,0); insert into F1025 values(4,-2); insert into F1025 values(5,2); insert into F1025 values(6,9); insert into F1025 values(7,1); insert into F1025 values(8,-4); insert into F1025 values(9,-7); &amp;ndash; Q：要求当Num中的数据同时大</description>
    </item>
    <item>
      <title>SQL每日一题F1028，关联子查询</title>
      <link>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/sql-daily-question-f1028-correlation-subquery/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/sql-daily-question-f1028-correlation-subquery/</guid>
      <description>SQL每日一题F1028，关联子查询 create table F1028A (aid varchar(20), bid varchar(20) ) insert into F1028A values (&amp;lsquo;跑步&amp;rsquo;,&amp;lsquo;张三&amp;rsquo;); insert into F1028A values (&amp;lsquo;游泳</description>
    </item>
    <item>
      <title>top10_sql_skills</title>
      <link>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/top10_sql_skills/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/top10_sql_skills/</guid>
      <description>-- 01 -- bad create table cm.tb_user( id int, name varchar(255), age int, gender varchar(16) ); -- good create table cm.tb_user( id int primary key, name varchar(255), age int, gender varchar(16), store_time datetime default now() ); -- 02 -- bad create table cm.tb_user( id int primary key , name varchar(255) not null default &amp;#39;NULL&amp;#39;, age int, gender varchar(16), create_time datetime default now(), update_time datetime default now() ); -- good create table cm.tb_user( id int primary key , name varchar(255) not</description>
    </item>
    <item>
      <title>查询连续登陆3天的用户id和登陆天数</title>
      <link>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/online_users_with_3_consecutive_days/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/online_users_with_3_consecutive_days/</guid>
      <description>-- 查询连续登陆3天的用户id和登陆天数 -- step1:用户登录日期去重 select distinct user_id, date(visit_time) as dt from cm.tb_user_logs; -- step2:用row_number()计数 select *, row_number() over (PARTITION by user_id order by dt) as xrank from (select distinct user_id,</description>
    </item>
    <item>
      <title>求占据前90%销售额的商品类型</title>
      <link>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/90_percent_contribution_goods/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/90_percent_contribution_goods/</guid>
      <description>-- 求占据前90%销售额的商品类型 -- step0. 准备数据 create table cm.tb_sale_amount( good_category int comment &amp;#39;商品类型ID&amp;#39;, sale_date date comment &amp;#39;销售日期&amp;#39;, amount int comment &amp;#39;销售额&amp;#39;,</description>
    </item>
    <item>
      <title>给定用户登录表，求表中每一天的3天留存率</title>
      <link>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/3days_alive_users/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/posts/%E7%A8%8B%E6%8A%80/sql/3days_alive_users/</guid>
      <description>-- 给定用户登录表，求表中每一天的&amp;#34;3天留存率&amp;#34; -- step 0 表准备，用户ID，登录时间 create table cm.tb_user_logs( user_id int, visit_time datetime ); insert into cm.tb_user_logs (user_id, visit_time) values (1001, &amp;#39;2022-10-01 08:01:23&amp;#39;), (1001, &amp;#39;2022-10-01 08:11:15&amp;#39;), (1002, &amp;#39;2022-10-01 08:22:19&amp;#39;), (1003, &amp;#39;2022-10-01 09:00:53&amp;#39;), (1002, &amp;#39;2022-10-02 18:00:13&amp;#39;), (1004, &amp;#39;2022-10-02 13:30:43&amp;#39;), (1004,</description>
    </item>
  </channel>
</rss>
