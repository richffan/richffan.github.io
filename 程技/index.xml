<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>程技 on 樊刹</title>
    <link>https://richfan.site/%E7%A8%8B%E6%8A%80/</link>
    <description>Recent content in 程技 on 樊刹</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 25 Sep 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://richfan.site/%E7%A8%8B%E6%8A%80/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git 的使用</title>
      <link>https://richfan.site/%E7%A8%8B%E6%8A%80/git/</link>
      <pubDate>Mon, 25 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/%E7%A8%8B%E6%8A%80/git/</guid>
      <description>1 前言# 1.1 Git 与 GitHub 的来历# Linux 之父 Linus 在 1991 年创建开源的 Linux 操作系统之后，多年来依靠全世界广大热心志愿者的共同建设，经过长足发展，现已成为世界上最大的服务器系统。系统创建之初，代码贡献者将源码文件发送给 Linus，由其手动合并。这种方式维持多年后，代码量已经庞大到人工合并难以为继，于是深恶集中式版本控制系统的 Linus 选择了一个分布式商业版本控制系统 BitKeeper，不过 Linux 社区的建设者们可以免费使用它。BitKeeper 改变了 Linus 对版本控制的认识，同时 Linus 发现 BitKeeper 有一些不足，而且有个关键性的问题使之不能被广泛使用，就是不开源。&#xA;在 2005 年，BitKeeper 所在公司发现 Linux 社区有人企图破解它，BitKeeper 决定收回 Linux 社区的免费使用权。Linus 对此事调节数周无果，找遍了当时已知的各种版本控制系统，没有一个看上眼的，一怒之下决定自己搞一个。Linus 花了十天时间用 C 语言写好了一个开源的版本控制系统，就是著名的 Git。&#xA;2007 年旧金山三个年轻人觉得 Git 是个好东西，就搞了一个公司名字叫 GitHub，第二年上线了使用 Ruby 编写的同名网站 GitHub，这是一个基于 Git 的免费代码托管网站（有付费服务）。十年间，该网站迅速蹿红，击败了实力雄厚的 Google Code，成为全世界最受欢迎的代码托管网站。2018 年 6 月，GitHub 被财大气粗的 Microsoft 收购。2019 年 1 月 GitHub 宣布用户可以免费创建私有仓库。根据 2018 年 10 月的 GitHub 年度报告显示，目前有 3100 万开发者创建了 9600 万个项目仓库，有 210 万企业入驻。</description>
    </item>
    <item>
      <title>Python pandas数据分析基础100问(有重复)</title>
      <link>https://richfan.site/%E7%A8%8B%E6%8A%80/python-pandas%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%9F%BA%E7%A1%80100%E9%97%AE%E6%9C%89%E9%87%8D%E5%A4%8D/</link>
      <pubDate>Mon, 25 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/%E7%A8%8B%E6%8A%80/python-pandas%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%9F%BA%E7%A1%80100%E9%97%AE%E6%9C%89%E9%87%8D%E5%A4%8D/</guid>
      <description>题目来自B站上看的一个讲爬虫的老师发的视频，不过代码没完全照那人的来，由于在平板上写的代码，就没有执行结果，感兴趣自行到B站搜原视频。&#xA;import pandas as pd 1、将list转为dataframe&#xA;ls = [(&amp;#34;join&amp;#34;, 25, &amp;#34;male&amp;#34;), (&amp;#34;lisa&amp;#34;, 29, &amp;#34;female&amp;#34;), (&amp;#34;david&amp;#34;, 27, &amp;#34;male&amp;#34;)``df = pd.DataFrame(ls, columns=[&amp;#34;name&amp;#34;, &amp;#34;age&amp;#34;, &amp;#34;gender&amp;#34;])``display(df) 2、从csv文件中读取数据&#xA;df = pd.read_csv(&amp;#34;filenpath&amp;#34;, encoding=&amp;#34;utf8&amp;#34;)``# filepath_or_buffer: filepath 文件路径``# usecols: 需要读取的行列表``# nrows: 读取的行数``# na_values: 空值``# encoding: 编码格式 3、将dataframe导入到mysql&#xA;from sqlalchemy import create_engine``from sqlclchemy.type import *``df = pd.DataFrame() # 数据集``# 创建引擎``conn = create_engine(&amp;#34;mysql+mysqlconnector://username:password@127.0.0.1:3306/db_name&amp;#34;)``# 写入到数据库``df.to_sql(&amp;#34;table_name&amp;#34;, engine) 4、查看一个dataframe的行数、列数&#xA;# 行``df.shape[0]``# 列``df.shape[1] 5、查看dataframe的列名&#xA;df.columns # serise格式``df.columns.tolist() # list格式 6、查看dataframe索引&#xA;df.index # series格式``df.index.tolist() 7、查看pandas库的版本号</description>
    </item>
    <item>
      <title>emoji</title>
      <link>https://richfan.site/%E7%A8%8B%E6%8A%80/emoji/</link>
      <pubDate>Tue, 01 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/%E7%A8%8B%E6%8A%80/emoji/</guid>
      <description>🛐 宗教场所 place of worship&#xA;⚛️ 原子符号 atom symbol&#xA;🕉️ 奥姆 om&#xA;✡️ 六芒星 star of David&#xA;☸️ 法轮 wheel of dharma&#xA;☯️ 阴阳 yin yang&#xA;✝️ 十字架 latin cross&#xA;☦️ 东正教十字架 orthodox cross&#xA;☪️ 星月 star and crescent&#xA;☮️ 和平符号 pease symbol&#xA;🕎烛台 menorah&#xA;🔯带中间点的六芒星 dotted six-pointed star</description>
    </item>
    <item>
      <title>国内AI集锦</title>
      <link>https://richfan.site/%E7%A8%8B%E6%8A%80/%E5%9B%BD%E5%86%85ai%E9%9B%86%E9%94%A6/</link>
      <pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://richfan.site/%E7%A8%8B%E6%8A%80/%E5%9B%BD%E5%86%85ai%E9%9B%86%E9%94%A6/</guid>
      <description>• 科大讯飞（讯飞星火）：https://xinghuo.xfyun.cn/&#xA;• 百度（文心一言）https://yiyan.baidu.com/welcome&#xA;• 阿里（通义千问）https://qianwen.aliyun.com/&#xA;• 抖音（云雀大模型）https://www.doubao.com/&#xA;• 360 （360智脑）https://ai.360.com/&#xA;• 智谱 AI（GLM大模型）https://chatglm.cn/&#xA;• 中科院（紫东太初大模型）https://xihe.mindspore.cn/&#xA;• 百川智能（百川大模型）https://www.baichuan-ai.com/&#xA;• 商汤（日日新大模型）https://techday.sensetime.com/&#xA;• MiniMax（ABAB大模型）https://api.minimax.chat/&#xA;• 上海人工智能实验室（书生通用大模型）https://intern-ai.org.cn/&#xA;• 华为（盘古大模型）https://www.huaweicloud.com/product/pangu.html</description>
    </item>
    <item>
      <title>审计工具</title>
      <link>https://richfan.site/%E7%A8%8B%E6%8A%80/%E5%AE%A1%E8%AE%A1%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 23 Feb 2022 17:56:00 +0000</pubDate>
      <guid>https://richfan.site/%E7%A8%8B%E6%8A%80/%E5%AE%A1%E8%AE%A1%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;p&gt;审计工具&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
